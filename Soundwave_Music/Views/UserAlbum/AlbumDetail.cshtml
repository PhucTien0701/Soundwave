@using Soundwave_Music.Common.Helper
@using PagedList.Mvc;
@model Soundwave_Music.Models.Album
@{
    ViewBag.Title = Model.Album_name;
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    ViewBag.ImageURL = Model.Image;
    // ** Related Album
    var relatedalbum = (List<Soundwave_Music.Models.Album>)ViewBag.RelatedAlbum;
    // ** Relate Album Genre
    var relatealbumgenre = (List<Soundwave_Music.Models.Album>)ViewBag.RelatedAlbumGenre;
    // ** Comment Album
    var albumcomment = (PagedList.PagedList<Soundwave_Music.Models.Album_Comment>)ViewBag.AlbumComment;
    // ** Like Comment Album
    var likecommentalbum = (List<Soundwave_Music.Models.Like_Album_Comment>)ViewBag.AlbumCommentLike;
    // ** Love Album
    var lovealbum = (List<Soundwave_Music.Models.Album_Love_React>)ViewBag.ReactLoveAlbum;
    // ** New Album Release
    var newalbumrelease = (List<Soundwave_Music.Models.Album>)ViewBag.NewAlbumRelease;
    // ** List songs in album
    var listalbumsongs = (List<Soundwave_Music.Models.Song>)ViewBag.AlbumSongs;
}
<link href="~/Content/my_css/summernote-bs4.min.css" rel="stylesheet" />
<link href="~/Content/my_css/musicstyle.css" rel="stylesheet" />

<!-- section -->
@section scripts{
    <script src="~/Scripts/my_js/musicplayercontrol.js"></script>
    <script>
        var sticky = new Sticky('[data-sticky]', {});
    </script>
    <!--comment frame-->
    <script src="~/Scripts/my_js/summernote-bs4.min.js"></script>
    <script src="~/Scripts/my_js/summernote-vi-VN.js"></script>
    <!--script album comment-->
    <script>
        $(document).ready(function () {
            $('.form_comment_post').summernote({
                height: 100,
                placeholder: 'How are you feeling...',
            });

            $('.close').click(function () {
                $('.note-modal').modal('hide');
            })

            $('.note-toolbar .note-table,.note-toolbar .note-color,.note-toolbar .note-fontname,.note-toolbar .note-font,.note-toolbar .note-icon-question, .note-toolbar .note-style:first, .note-toolbar .note-para, .note-toolbar .note-view').remove();

            $(".note-editing-area,.request_login").click(function (ev) {
                ev.preventDefault();
                $('#create_submit_comment').removeAttr('hidden');
                $.get("/User/UserLogged", {},
                    function (isLogged, textStatus, jqXHR) {
                        if (!isLogged) {
                            bootbox.confirm({
                                message: "Please sign in to use this function!",
                                buttons: {
                                    confirm: {
                                        label: 'Sign In',
                                        className: 'btn-info'
                                    },
                                    cancel: {
                                        label: 'Back',
                                        className: 'btn-secondary'
                                    }
                                },
                                callback: function (result) {
                                    if (result) {
                                        window.location = "/User/SignIn";
                                    }
                                }
                            });
                        }
                    },
                    "json"
                );
            });
            //Add comment
            $('#create_submit_comment').click(function () {
                var com_content = $("#comment__con").val();
                if (com_content == "") {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top',
                        showConfirmButton: false,
                        timer: 2000,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })
                    Toast.fire({
                        icon: 'warning',
                        title: 'Please input comment content'
                    })
                    return false;
                }
                else if (com_content.length < 20) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top',
                        showConfirmButton: false,
                        timer: 2500,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })
                    Toast.fire({
                        icon: 'warning',
                        title: 'Comment content has at least 20 characters'
                    })
                    return false;
                }
                else if (com_content.length > 500) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top',
                        showConfirmButton: false,
                        timer: 2500,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })
                    Toast.fire({
                        icon: 'warning',
                        title: 'Comment content do not more than 500 characters'
                    })
                    return false;
                }
                else {
                    var data = $("#create_comment_post").serialize();
                    $.ajax({
                        type: "GET",
                        url: "/UserAlbum/CommentAlbum",
                        data: data,
                        success: function (result) {
                            if (result == true) {
                                var find_text = $('#create_comment_post')
                                find_text.find('.note-editable').text('')
                                $('#create_comment_post').val('')
                                const Toast = Swal.mixin({
                                    toast: true,
                                    position: 'top',
                                    showConfirmButton: false,
                                    timer: 2000,
                                    didOpen: (toast) => {
                                        toast.addEventListener('mouseenter', Swal.stopTimer)
                                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                                    }
                                })
                                Toast.fire({
                                    icon: 'success',
                                    title: 'Comment successfully'
                                })
                            }
                            else {
                                const Toast = Swal.mixin({
                                    toast: true,
                                    position: 'top',
                                    showConfirmButton: false,
                                    timer: 1000,
                                    didOpen: (toast) => {
                                        toast.addEventListener('mouseenter', Swal.stopTimer)
                                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                                    }
                                })
                                Toast.fire({
                                    icon: 'error',
                                    title: 'Error'
                                })
                            }
                        }
                    })
                };
            });
        });
    </script>

    <script>
        var Like_Comment = function (cmt_id, count_like_cmt) {
            var id = cmt_id
            var count_like = count_like_cmt
            $.ajax({
                type: "POST",
                url: '/UserAlbum/LikeCommentAlbum',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ albumcomment_id: id }),
                dataType: "json",
                success: function (result) {
                    if (result == true) {
                        $('#BtnReacton_' + id + '').attr('onclick', 'Remove_Like_Comment(' + id + ',' + (count_like + 1) + ')' + '');
                        $('#BtnReacton_' + id + '').text('Unlike');
                        $('#sumlike_cmt_' + id + '').text('(' + (count_like + 1) + ')');
                    }
                    else {
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 1500,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })
                        Toast.fire({
                            icon: 'error',
                            title: 'Fail'
                        })
                    }
                },
                error: function () {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top',
                        showConfirmButton: false,
                        timer: 2500,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })
                    Toast.fire({
                        icon: 'danger',
                        title: 'Fail'
                    })
                }
            });
        }
        // remove reaction comment post
        var Remove_Like_Comment = function (cmt_id, count_like_cmt) {
            var id = cmt_id
            var count_like = count_like_cmt
            $.ajax({
                type: "POST",
                url: '/UserAlbum/LikeCommentAlbum',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ albumcomment_id: id }),
                dataType: "json",
                success: function (result) {
                    if (result == true) {
                        $('#BtnReacton_' + id + '').attr('onclick', 'Like_Comment(' + id + ',' + (count_like - 1) + ')' + '');
                        $('#BtnReacton_' + id + '').text('Like');
                        $('#sumlike_cmt_' + id + '').text('(' + (count_like - 1) + ')');
                    }
                    else {
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 1500,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })
                        Toast.fire({
                            icon: 'error',
                            title: 'Fail'
                        })
                    }
                },
                error: function () {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top',
                        showConfirmButton: false,
                        timer: 2500,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })
                    Toast.fire({
                        icon: 'danger',
                        title: 'Fail'
                    })
                }
            });
        }
    </script>
}
<!--Start section-->
<section class="margin_mobile_fixed">
    <div class="container mt-20px mb-20px">
        <div class="row">
            <!--start blog-->
            <div class="col-xl-8">
                <div class="boder_sidebar">
                    <div class="blog_section">
                        <div>
                            <p class="blog_head">@Model.Album_name</p>
                            <div class="post_info d-flex mt-20px">
                                <div class="pe-2" style="color:#999"><i class="fa fa-heart" aria-hidden="true"></i>&nbsp;@(ViewBag.CountLoveAlbum)</div>
                                <div class="pe-2" style="color:#999"><i class="fa fa-headphones" aria-hidden="true"></i>&nbsp;@Model.view_count</div>
                                <div class="pe-2" style="color:#999"><i class="fa fa-clock-o" aria-hidden="true"></i>@Model.Create_date</div>
                            </div>
                            <div class="pe-2" style="text-align:center"><img src="@Model.Singer.Image" class="rounded-circle" style="width: 10% !important; height: auto !important;" /><a href="#" style="color:#005ec4"><br />@Model.Singer.Singer_name</a></div>
                        </div>
                        <!--begin::Album information-->
                        <div class="related_post">
                            <h4 class="title_sidebar">
                                <span class="title_sidebar_content">Album Information</span>
                            </h4>
                            <div class="content_raw">
                                <p>
                                    Singer:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Model.Singer.Singer_name <br />
                                    Album:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Model.Album_name <br />
                                    Genre:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Model.Genre.Genre_name <br />
                                    Area:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Model.Area.Area_name <br />
                                </p>
                            </div>
                            <div class="imagesize" style="text-align:center">
                                <img style="height: 40% !important; width:auto !important" src="@Model.Image" />
                            </div>
                            <div class="content_raw" style="text-align:center">
                                <div class="simple-audio-player" id="simp" data-config='{"shide_top":false,"shide_btm":false,"auto_load":false}'>
                                    <div class="simp-playlist">
                                        <ul>
                                            @foreach (var listsongs in listalbumsongs)
                                            {
                                                <li><span class="simp-source" data-src="@listsongs.Music_File_Upload">@listsongs.Song_name</span><span class="simp-desc">@listsongs.Singer.Singer_name</span></li>
                                            }
                                        </ul>
                                    </div>
                                    <div class="simp-footer">Album: @Model.Album_name</div>
                                </div>
                            </div>
                        </div>
                        <!--end::Album information-->
                        <div class="comment_section">
                        </div>
                        <div class="view_commant">
                            <div class="post_commt_form mb-4">
                                <div class="font_roboto_medium fs-18px">@(ViewBag.countcomment) Comment </div>
                                <div class="form_section">
                                    <form class="form_contant" id="create_comment_post">
                                        <fieldset class="row">
                                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 form_comment mb-2">
                                                <input type="hidden" name="Album_id" placeholder="How are you feeling..." value="@Model.Album_id" />
                                                <textarea class="form-control form_comment_post " id="comment__con" name="commentcontent"></textarea>
                                            </div>
                                            <div class="d-flex justify-content-end">
                                                @if (User.Identity.IsAuthenticated)
                                                {
                                                    <a href="@Url.Action("AlbumDetail", "UserAlbum", new {id = @Model.Album_id})" class="btn bg-button" id="create_submit_comment">Send</a>
                                                }
                                                else
                                                {
                                                    <button class="btn bg-button" disabled>Send</button>
                                                }
                                            </div>
                                        </fieldset>
                                    </form>
                                </div>
                            </div>
                            @foreach (var comment in albumcomment)
                            {
                                <div class="row mb-2">
                                    <div class="col-2 col-md-1 pe-0">
                                        <div class="full text-left text-md-right"><img style="object-fit: cover;width:40px!important;height:40px!important;" src="@comment.User.Avatar" alt="#"> </div>
                                    </div>
                                    <div class="col-12 col-md-11">
                                        <div class="full command_cont">
                                            <p class="comm_head">
                                                @comment.User.Full_name
                                            </p>
                                            <div class="mt-1 mb-1 content_com">
                                                <p>
                                                    @Html.Raw(comment.Content)
                                                </p>
                                            </div>
                                            <div class="fs-13px user-select-none">
                                                <span class="material-icons fs-6px text-secondary"> fiber_manual_record </span>
                                                <span class="text_comment">
                                                    <span class="like_margin material-icons fs-16px">thumb_up </span>
                                                    @{
                                                        int count_like_cmt = 0;
                                                        int count_you_like_cmnt = 0;
                                                    }
                                                    @{
                                                        foreach (var like in likecommentalbum)
                                                        {
                                                            if (comment.Album_comment_id == like.Album_comment_id && like.React_like == "1")
                                                            {
                                                                count_like_cmt++;
                                                            }
                                                            if (User.Identity.IsAuthenticated)
                                                            {
                                                                if (User.Identity.GetUserId() == like.User_id && comment.Album_comment_id == like.Album_comment_id)
                                                                {
                                                                    count_you_like_cmnt++;
                                                                }
                                                            }
                                                        }
                                                    }
                                                    @if (User.Identity.IsAuthenticated)
                                                    {

                                                        if (count_you_like_cmnt > 0)
                                                        {
                                                            <a class="text_comment request_login " id="BtnReacton_@comment.Album_comment_id" onclick="Remove_Like_Comment(@comment.Album_comment_id,@count_like_cmt)" style="cursor:pointer;">Unlike</a>
                                                        }
                                                        else
                                                        {
                                                            <a class="text_comment request_login " id="BtnReacton_@comment.Album_comment_id" onclick="Like_Comment(@comment.Album_comment_id,@count_like_cmt)" style="cursor:pointer;">Like</a>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <a class="text_comment request_login" style="cursor:pointer;">Like</a>
                                                    }
                                                    <span id="sumlike_cmt_@comment.Album_comment_id">(@count_like_cmt)</span>
                                                </span>
                                                <span class="text-secondary">
                                                    <span class="material-icons text-secondary fs-6px"> fiber_manual_record </span>
                                                    @comment.Create_date
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="d-flex justify-content-end mb-5 pagination_comment_post">
                                @Html.PagedListPager(albumcomment, page => Url.Action("AlbumDetail", new { @page = page }), new PagedListRenderOptions
                                {
                                    LinkToPreviousPageFormat = "‹",
                                    LinkToNextPageFormat = "›",
                                    DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                                    DisplayLinkToLastPage = PagedListDisplayMode.Never,
                                    DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                                    DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                                    MaximumPageNumbersToDisplay = 5
                                })
                            </div>
                        </div>
                        <!--begin::related post-->
                        <div class="related_post">
                            <h4 class="title_sidebar">
                                <span class="title_sidebar_content">Relate Album</span>
                            </h4>
                            <div class="row">
                                @foreach (var item in relatedalbum)
                                {
                                    <div class="col-lg-4 col-6 mb-3">
                                        <div class="margin_related_post"><a href="#" class="me-2 category_sidebar_url">@item.Singer.Singer_name</a><a href="@Url.Action("AlbumDetail", "UserAlbum", new {id = item.Album_id})"><img class="img_related_post" src="@item.Image" alt="@item.Album_id"></a></div>
                                        <a href="@Url.Action("AlbumDetail", "UserAlbum", new {id = item.Album_id})" class="post-url-side-bar">
                                            @item.Album_name
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="related_post">
                            <h4 class="title_sidebar">
                                <span class="title_sidebar_content">Relate Genre</span>
                            </h4>
                            <div class="row">
                                @foreach (var item in relatealbumgenre)
                                {
                                    <div class="col-lg-4 col-6 mb-3">
                                        <div class="margin_related_post"><a href="#" class="me-2 category_sidebar_url">@item.Singer.Singer_name</a><a href="@Url.Action("AlbumDetail", "UserAlbum", new {id = item.Album_id})"><img class="img_related_post" src="@item.Image" alt="@item.Album_id"></a></div>
                                        <a href="@Url.Action("AlbumDetail", "UserAlbum", new {id = item.Album_id})" class="post-url-side-bar">
                                            @item.Album_name
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                        <!--end::related post-->
                    </div>
                </div>
            </div>
            <!--end blog-->
            <div class="col-xl-4">
                <!--begin::post recent pc-->
                <div class="side_bar_blog boder_sidebar recent_post_pc" data-sticky data-sticky-wrap data-margin-top="2" data-margin-bottom="20">
                    <h4 class="title_sidebar">
                        <span class="title_sidebar_content">New Albums Release</span>
                    </h4>
                    <div class="recent_post">
                        <ul>
                            @foreach (var item in newalbumrelease)
                            {
                                <li>
                                    <div class="post_head">
                                        <a href="@Url.Action("AlbumDetail", "UserAlbum", new {id = item.Album_id})"><img src="@item.Image" alt="@item.Album_id"></a>
                                        <a href="@Url.Action("AlbumDetail", "UserAlbum", new {id = item.Album_id})">@item.Album_name</a>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <div class="post_date">
                                            <a href="#" class="me-2 category_sidebar_url">@item.Singer.Singer_name</a><i class="fa fa-calendar" aria-hidden="true"></i>&nbsp;
                                            @item.Create_date
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                <!--end::post recent pc-->
            </div>
        </div>
    </div>
</section>
<!-- end section -->