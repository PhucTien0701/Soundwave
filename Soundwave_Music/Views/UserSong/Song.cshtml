@using Soundwave_Music.Common.Helper
@using PagedList
@model IPagedList<Soundwave_Music.Models.Song>
@{
    ViewBag.Title = " SongGenre " + ViewBag.SongGenre;
    ViewBag.Tag = "Song Genre";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var lovereaction = (List<Soundwave_Music.Models.Song_Love_React>)ViewBag.ReactLoveSong;
}
@section scripts{
    <script>
        //reaction comment post
        var Like_Comment = function (song_id, count_love_song) {
            var id = song_id
            var count_like = count_love_song
            $.ajax({
                type: "POST",
                url: '/UserSong/ReactLoveSong',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ Song_id: id }),
                dataType: "json",
                success: function (result) {
                    if (result == true) {
                        $('#BtnReacton_' + id + '').attr('onclick', 'Remove_Like_Comment(' + id + ',' + (count_like + 1) + ')' + '');
                        $('#BtnReacton_' + id + '').text('Unlove');
                        $('#sumlike_cmt_' + id + '').text('(' + (count_like + 1) + ')');
                    }
                    else {
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 1500,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })
                        Toast.fire({
                            icon: 'error',
                            title: 'Error'
                        })
                    }
                },
                error: function () {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top',
                        showConfirmButton: false,
                        timer: 2500,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })
                    Toast.fire({
                        icon: 'danger',
                        title: 'Lỗi'
                    })
                }
            });
        }
        // remove reaction comment post
        var Remove_Like_Comment = function (cmt_id, count_like_cmt) {
            var id = cmt_id
            var count_like = count_like_cmt
            $.ajax({
                type: "POST",
                url: '/UserSong/ReactLoveSong',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ Song_id: id }),
                dataType: "json",
                success: function (result) {
                    if (result == true) {
                        $('#BtnReacton_' + id + '').attr('onclick', 'Like_Comment(' + id + ',' + (count_like - 1) + ')' + '');
                        $('#BtnReacton_' + id + '').text('Love');
                        $('#sumlike_cmt_' + id + '').text('(' + (count_like - 1) + ')');
                    }
                    else {
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top',
                            showConfirmButton: false,
                            timer: 1500,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })
                        Toast.fire({
                            icon: 'error',
                            title: 'Fail'
                        })
                    }
                },
                error: function () {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top',
                        showConfirmButton: false,
                        timer: 2500,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })
                    Toast.fire({
                        icon: 'danger',
                        title: 'Fail'
                    })
                }
            });
        }
    </script>
}
<div class="mt-20px margin_mobile_fixed">
    <div class="container">
        <div class="row boderproductdetail news_list_section">
            <!--begin::item newscategory-->
            <h4 style="color:red; text-align:center; font-size: 24px"><b>Songs</b></h4>
            @if (Model.Count == 0)
            {
                <span class="h2 text-danger center mt-100px">There is no song</span>
            }
            else
            {
                foreach (var item in Model)
                {
                    <div class="col-lg-4 col-6 listnewscategory">
                        <div class="blog_section">
                            <a href="@Url.Action("SongDetail","UserSong",new {id = item.Song_id})">
                                <div class="blog_feature_img disable_scale_img"> <img class="img-responsive transition" src="@item.Image" alt="#"> </div>
                                <div class="blog_feature_cantant">
                                    <p class="blog_head d-flex justify-content-center">@item.Song_name</p>
                                </div>
                                <div class="fs-13px user-select-none">
                                    <span class="material-icons fs-6px text-secondary"> fiber_manual_record </span>
                                    <span class="text_comment">
                                        <span class="material-icons fs-10px">favorite</span>
                                        @{
                                            int count_love_song = 0;
                                            int count_people_love_song = 0;
                                        }
                                        @{
                                            foreach (var love in lovereaction)
                                            {
                                                //check the sum of react love
                                                if (item.Song_id == love.Song_id && love.React_love == "1")
                                                {
                                                    count_love_song++;
                                                }
                                                //if people loved song, the unloved button will display
                                                if (User.Identity.IsAuthenticated)
                                                {
                                                    if (User.Identity.GetUserId() == love.User_id && item.Song_id == love.Song_id)
                                                    {
                                                        count_people_love_song++;
                                                    }
                                                }
                                            }
                                        }
                                        <!--authenticated user-->
                                        @if (User.Identity.IsAuthenticated)
                                        {

                                            if (count_people_love_song > 0)
                                            {
                                                <a class="text_comment request_login " id="BtnReacton_@item.Song_id" onclick="Remove_Like_Comment(@item.Song_id,@count_love_song)" style="cursor:pointer;">Unlove</a>
                                            }
                                            else
                                            {
                                                <a class="text_comment request_login " id="BtnReacton_@item.Song_id" onclick="Like_Comment(@item.Song_id,@count_love_song)" style="cursor:pointer;">Love</a>
                                            }
                                        }
                                        else
                                        {
                                            <a class="text_comment request_login" style="cursor:pointer;">Love</a>
                                        }
                                        <span id="sumlike_cmt_@item.Song_id">(@count_love_song)</span>
                                    </span>
                                    <span class="text-secondary">
                                        <span class="material-icons text-secondary fs-6px"> fiber_manual_record </span>
                                        @item.Release_date
                                    </span>
                                </div>
                            </a>
                        </div>
                    </div>
                }
            }
            <!--end::item newscategory-->
            <!--begin::pagination-->
            <div class="center mt-20px mb-20px">
                @Html.Partial("_Paging", Model)
            </div>
            <!--begin::pagination-->
        </div>
    </div>
</div>
<!-- end content news -->
